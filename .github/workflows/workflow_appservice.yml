name: Build and Deploy to App Service

on:
  workflow_dispatch:

jobs:
  build:
    name: Build and Test Solution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    name: Deploy Solution
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'microhack-webapp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C48CC2577AB24EFF9C988AEAE5BE1436 }}
          package: .

      - name: Build and Push Image
        run: |
          az acr login --name user5ContaineRegistry --username ${{ secrets.ACR_USERNAME }} --password ${{ secrets.ACR_PASSWORD }} &&
          docker build -t user5containeregistry-ggb4ajdwfuf2bab8.azurecr.io/microhackapp:1 -f user5DockerFile . &&
          docker push user5containeregistry-ggb4ajdwfuf2bab8.azurecr.io/microhackapp:1
        
